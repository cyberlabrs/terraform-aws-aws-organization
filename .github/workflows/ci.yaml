name: Generate terraform docs

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["*"]

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
      - uses: terraform-linters/setup-tflint@v4
      - uses: pre-commit/action@v3.0.0

  generate-docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}

      - name: Render terraform docs and push changes back to PR
        uses: terraform-docs/gh-actions@v1
        with:
          git-push: "true"
          template: |-
            <!-- BEGIN_TF_DOCS -->
            # AWS Organization terraform module

            ## Usage

            In this example we create 2 SCP policies: _dev_control_access_ and _deny_all_, use json policy from folder: `policies/scps/`

            ```terraform
            module "aws_organization" {
              source  = "cyberlabrs/aws-organization/aws"
              version = "1.0.0"

              feature_set                   = "ALL"
              aws_service_access_principals = ["sso.amazonaws.com"]
              enabled_policy_types          = ["SERVICE_CONTROL_POLICY"]

              policies = [
                {
                  name : "dev_control_access",
                  template_file : "./policies/scps/dev_control_access.json",
                },
                {
                  name : "deny_all",
                  template_file : "./policies/scps/deny_all.json",
                }
              ]

              organizational_units = [
                {
                  name : "CoreOU",
                  policies : [],
                  children : [
                    {
                      name : "DevelopmentOU",
                      policies : ["dev_control_access"],
                      children : []
                    },
                    {
                      name : "StageOU",
                      policies : [],
                      children : []
                    },
                    {
                      name : "ProductionOU",
                      policies : [],
                      children : []
                    }
                  ]
                },
                {
                  name : "SandboxOU",
                  policies : [],
                  children : []
                }
              ]

              accounts = [
                {
                  name : "AccountInRootOU",
                  email : "test+root@test.com",
                  parent_id : "",
                  policies : ["deny_all"]
                },
                {
                  name : "Development",
                  email : "test+dev@test.com",
                  parent_path : "CoreOU/DevelopmentOU"
                },
                {
                  name : "Stage",
                  email : "test+stage@test.com",
                  parent_path : "CoreOU/StageOU",
                },
                {
                  name : "Pruduction",
                  email : "test+shared@test.com",
                  parent_path : "CoreOU/ProductionOU"
                }
              ]
            }
            ```

            ## Examples

            - [Complete AWS Organization using yaml config files](examples/complete-with-yaml)
            - [Complete AWS Organization using Terraform variables](examples/complete-with-tf-vars)

            {{ .Content }}

            ## Authors

            Module is maintained by [Nikola Kolovic](https://github.com/nikolakolovic) with help from [CyberLab Team](https://github.com/cyberlabrs).

            ## License

            Apache 2 Licensed. See [LICENSE](LICENSE) for full details.
            <!-- END_TF_DOCS -->
